---
import { languagesList } from "../i18n/locales/index";
const currentLang: string = Astro.locals.lang || "es";
const languagesJSON = JSON.stringify(Object.keys(languagesList));
---

<select class="rounded-lg bg-[#fbfbfb] border-none shadow-sm font-bold" name="language" id="language-select" data-languages={languagesJSON}>
    {
        Object.entries(languagesList).map(([lang, label]) => (
            <option value={lang} selected={lang === currentLang}>
                {lang.toUpperCase()}
            </option>
        ))
    }
</select>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const selectElement = document.getElementById("language-select");
        if (!selectElement) return;

        const languages = JSON.parse(selectElement.getAttribute("data-languages") || "[]");

        selectElement.addEventListener("change", (event) => {
            const target = event.target;
            if (!target) return;

            const selectedLang = (target as HTMLSelectElement).value;

            if (!languages.includes(selectedLang)) {
                console.error("Idioma no permitido:", selectedLang);
                return;
            }

            document.cookie = `preferred-lang=${encodeURIComponent(selectedLang)}; Path=/; Max-Age=31536000; SameSite=Strict`;

            let pathParts = window.location.pathname.split("/").filter(Boolean);

            if (languages.includes(pathParts[0])) {
                pathParts.shift();
            }

            if (selectedLang !== "es") {
                pathParts.unshift(selectedLang);
            }

            const newPath = `/${pathParts.join("/")}`;

            window.location.href = newPath;
        });
    });
</script>
