---
import Layout from "../../../../layouts/Layout.astro";
import { apiGatewayCheckoutsIdGet } from "../../../../openapi/client";

const { id } = Astro.params;

if (!id) {
    throw new Error("ID del pago no proporcionado");
}

let response;
let error = null;

try {
    const authData = Astro.cookies.get("access-token");
    const { token } = authData?.json();

    response = await apiGatewayCheckoutsIdGet({
        path: { id },
        headers: {
            Authorization: `Bearer ${token}`,
        },
    });
    console.log("response", response);
} catch (err) {
    error = err instanceof Error ? err.message : "Error desconocido";
}
---

<Layout title="Estado del pago">
    <main class="wrapper py-10">
        {
            error ? (
                <section class="text-center text-red-600">
                    <h1 class="mb-4 text-2xl font-bold">Ocurrió un error</h1>
                    <p>{error}</p>
                </section>
            ) : (
                <section class="text-center">
                    <h1 class="mb-6 text-2xl font-bold">Resumen del pago</h1>

                    <p class="mb-2">
                        ID del Checkout: <strong>{response?.data?.id ?? "N/A"}</strong>
                    </p>
                    <p class="mb-2">
                        Estado:
                        <strong>
                            {response?.data?.status === "charged"
                                ? " ✅ Pago confirmado"
                                : response?.data?.status === "pending"
                                  ? " ⌛ Pago pendiente"
                                  : ` ${response?.data?.status ?? "N/A"}`}
                        </strong>
                    </p>

                    <h2 class="mt-8 mb-2 text-xl font-semibold">Cargos realizados</h2>
                    <ul class="mx-auto mb-6 max-w-xl text-left">
                        {response?.data?.charges?.map((charge) => (
                            <li class="mb-4 border-b pb-2">
                                <p class="font-bold">{charge.title}</p>
                                <p>
                                    Monto: {((charge.money.amount ?? 0) / 100).toFixed(2)}{" "}
                                    {charge.money.currency}
                                </p>
                            </li>
                        ))}
                    </ul>

                    {(response?.data?.trackings ?? []).length > 0 && (
                        <>
                            <h2 class="mt-6 mb-2 text-xl font-semibold">Trackings</h2>
                            <ul class="mx-auto max-w-xl text-left">
                                {response?.data?.trackings?.map((t) => (
                                    <li class="mb-2">
                                        <strong>{t.title}:</strong> {t.value}
                                    </li>
                                ))}
                            </ul>
                        </>
                    )}
                </section>
            )
        }
    </main>
</Layout>
