---
import Layout from "../../../layouts/Layout.astro";
import { apiAccountingsIdGet, apiGatewayCheckoutsIdGet } from "../../../openapi/client";
import FeedbackForm from "../../../components/Checkout/FeedbackForm.svelte";
import Steps from "../../../components/Checkout/Steps.svelte";
import Summary from "../../../components/Checkout/Summary.svelte";
import ApprovedIcon from "../../../svgs/ApprovedIcon.astro";
import PaymentErrorIcon from "../../../svgs/PaymentErrorIcon.astro";
import PaymentMethod from "../../../components/Checkout/PaymentMethod.astro";
import { apiGatewaysGetCollection } from "../../../openapi/client/index";
import { getDefaultCurrency } from "../../../utils/consts.ts";

const defaultCurrency = getDefaultCurrency();

const { data: paymentGateways } = await apiGatewaysGetCollection();

const accessCookie = Astro.cookies.get("access-token");

if (!accessCookie) {
    throw new Error("Token not found");
}

const { accountingId, token } = JSON.parse(accessCookie.value);
const { data: accounting } = await apiAccountingsIdGet({
    path: { id: accountingId },
    headers: {
        Authorization: `Bearer ${token}`,
    },
});

const { t } = Astro.locals;

let error = null;
let amount: number | undefined = undefined;

try {
    const url = new URL(Astro.request.url);
    const checkoutId = url.searchParams.get("checkoutId");

    if (!checkoutId) {
        throw new Error("Checkout ID not found");
    }

    const response = await apiGatewayCheckoutsIdGet({
        path: { id: checkoutId },
        headers: {
            Authorization: `Bearer ${token}`,
        },
    });

    if (!response.data) {
        throw new Error("Data not found");
    }

    amount = response.data?.charges?.reduce((sum, charge) => sum + (charge.money.amount ?? 0), 0);
} catch (err) {
    console.error("Error trying to get payment status", err);
    error = err instanceof Error ? err.message : "Unknown error";
}
---

<Layout title="Estado del pago">
    <main class="wrapper py-10">
        {
            error ? (
                <main class="wrapper">
                    <div class="flex flex-row gap-8 py-10">
                        <div class="flex w-1/2 flex-col gap-10">
                            <div class="flex flex-col gap-4">
                                <div class="flex flex-col gap-10">
                                    <div class="flex flex-row items-center justify-between gap-6">
                                        <div class="flex w-2/3 flex-col gap-4">
                                            <h2 class="text-[40px]/[48px] font-bold tracking-[0%] text-[#3D3D3D]">
                                                {t("payment.page-error.title")}
                                            </h2>
                                            <p class="text-[#575757]">
                                                {t("payment.page-error.description")}
                                            </p>
                                        </div>
                                        <PaymentErrorIcon />
                                    </div>

                                    <PaymentMethod
                                        {paymentGateways}
                                        {accounting}
                                        hasError={!!error}
                                    />
                                </div>
                            </div>
                        </div>
                        <div class="border-tertiary sticky top-10 flex h-fit w-1/2 flex-col gap-6 rounded-[40px] border bg-white">
                            <Summary client:load hasError={!!error} {defaultCurrency} {amount} />
                            <Steps client:load step={4} hasError={!!error} />
                            <div class="flex flex-col gap-4 px-6 pt-0 pb-6">
                                <p class="text-sm text-[#575757]">{t("checkout.summary.deduct")}</p>
                                <a class="bg-primary w-fit cursor-pointer rounded-3xl px-6 py-4 font-bold text-[#462949]">
                                    {t("global.btn.continue")}
                                </a>
                            </div>
                        </div>
                    </div>
                </main>
            ) : (
                <>
                    <main class="wrapper">
                        <div class="flex flex-row gap-8 py-10">
                            <div class="flex w-1/2 flex-col gap-10">
                                <div class="flex flex-col gap-4">
                                    <div class="flex flex-col gap-10">
                                        <div class="flex flex-row items-center justify-between gap-6">
                                            <div class="flex w-2/3 flex-col gap-4">
                                                <h2 class="text-[40px]/[48px] font-bold tracking-[0%] text-[#3D3D3D]">
                                                    {t("payment.page-aproved.title")}
                                                </h2>
                                                <p class="text-[#575757]">
                                                    {t("payment.page-aproved.description")}
                                                </p>
                                            </div>
                                            <ApprovedIcon />
                                        </div>
                                        <div>
                                            <FeedbackForm client:load />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="border-tertiary sticky top-10 flex h-fit w-1/2 flex-col gap-6 rounded-[40px] border bg-white">
                                <Summary client:load {defaultCurrency} {amount} />
                                <Steps step={4} client:load />
                                <div class="flex flex-col gap-4 px-6 pt-0 pb-6">
                                    <p class="text-sm text-[#575757]">
                                        {t("checkout.summary.deduct")}
                                    </p>
                                    <a class="bg-primary w-fit cursor-pointer rounded-3xl px-6 py-4 font-bold text-[#462949]">
                                        {t("global.btn.continue")}
                                    </a>
                                </div>
                            </div>
                        </div>
                    </main>
                    <script>import {cart} from "../../../stores/cart"; cart.clear();</script>
                </>
            )
        }
    </main>
</Layout>
