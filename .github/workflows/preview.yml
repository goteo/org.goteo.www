name: Deploy PR Preview

on:
    pull_request:
        branches:
            - staging
            - main

jobs:
    preview:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Setup pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 9

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "pnpm"

            - name: Install dependencies
              run: pnpm install

            - name: Build project
              run: pnpm run build

            - name: Deploy Worker for PR
              run: >
                  wrangler deploy --env preview --name goteo-pr-${{
                  github.event.pull_request.number }}-preview

            - name: Create route for custom subdomain
              run: >
                  curl -X POST "https://api.cloudflare.com/client/v4/zones/${{
                  secrets.CLOUDFLARE_ZONE_ID }}/workers/routes" \
                    -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_API_TOKEN }}" \
                    -H "Content-Type: application/json" \
                    --data '{
                      "pattern": "pr-${{ github.event.pull_request.number }}.v4.preview.goteo.org",
                      "script": "goteo-pr-${{ github.event.pull_request.number }}-preview"
                    }'

            - name: Comment preview URL using GitHub Script
              uses: actions/github-script@v7
              with:
                  github-token: "${{ secrets.GITHUB_TOKEN }}"
                  script: >
                      const prNumber = context.payload.pull_request.number;

                      const body = `**Preview URL:**  

                      [https://pr-${prNumber}.v4.preview.goteo.org](https://pr-${prNumber}.v4.preview.goteo.org)`;

                      const comments = await github.rest.issues.listComments({
                        ...context.repo,
                        issue_number: prNumber,
                      });

                      const existingComment = comments.data.find(c =>
                        c.body.includes('**Preview URL:**')
                      );

                      if (existingComment) {
                        await github.rest.issues.updateComment({
                          ...context.repo,
                          comment_id: existingComment.id,
                          body,
                        });
                      } else {
                        await github.rest.issues.createComment({
                          ...context.repo,
                          issue_number: prNumber,
                          body,
                        });
                      }
